---
import Layout from "../../layouts/Layout.astro";
const prerender = false;
// 1. Definir los idiomas soportados
export async function getStaticPaths() {
  return [
    { params: { lang: "en" } },
    { params: { lang: "es" } },
    { params: { lang: "fr" } },
    { params: { lang: "ar" } },
  ];
}

// 2. Obtener idioma de la URL
const { lang } = Astro.params;

// 3. Cargar traducciones
const t = (await import(`../../i18n/${lang}.json`)).default;
const data = (await import(`../../data/${lang}/hero.json`)).default;


---

<!-- Resto del cÃ³digo igual... -->
<Layout lang={lang} title={t.header.title} description={t.header.title}>

<section class="hero">
  <div class="hero_content hero_item">
    <h1 class="hero_title">{data.title}</h1>
    <p class="hero_subtitle" set:html={data.subtitle} />
  </div>

  <div class="hero_image hero_item">
    <div class="hero_actions">
      <a href=`/${lang}/services` class="btn_primary"
        >{data.primary_btn}</a
      >
      <a href=`/${lang}/contact` class="btn_secondary"
        >{data.secondary_btn}</a
      >
    </div>
  </div>
</section>
</Layout>


<style>
  .hero {
    --item_padding: 1.5vw;

    display: grid;
    grid-template-columns: 1fr;
    justify-items: center;
    align-items: center;

    @media (width >= 1024px) {
      grid-template-columns: repeat(2, 50dvw);
    }
  }

  .hero_item {
    min-height: 50dvh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding: 0 var(--item_padding);

    @media (width >= 1024px) {
      min-height: 100dvh;
    }
  }

  .hero_content {
    .hero_title {
      font-size: var(--font-xlarge);
      font-weight: bold;
      margin-bottom: 1rem;

      @media (width >= 1024px) {
        /* font-size: 2rem; */
      }
    }

    .hero_subtitle {
      margin-bottom: 2rem;
      opacity: 0.9;
      text-wrap: balance;
      text-align: center;

      @media (width >= 1024px) {
        font-size: var(--font-medium);
      }
    }
  }

  .hero_image {
    position: relative;
    display: grid;
    place-items: center;
    background-image: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)),
      url('/world_conextion.webp');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    width: calc(100% - var(--item_padding) * 2);
    clip-path: polygon(
      56% 23%,
      84% 19%,
      88% 37%,
      100% 70%,
      83% 89%,
      53% 85%,
      20% 90%,
      7% 69%,
      9% 36%,
      31% 27%
    );

    .hero_actions {
      display: flex;
      flex-direction: column;
      gap: var(--gap);

      @media (width >= 1024px) {
        flex-direction: row;
      }
    }

    .btn_primary,
    .btn_secondary {
      padding: 0.75rem 1.5rem;
      border-radius: 8px;
      font-size: var(--font-medium);
      font-weight: 600;
      text-align: center;
      transition:
        transform 0.2s,
        box-shadow 0.2s;

      &:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      }
    }

    .btn_primary {
      background: var(--background-color);
      border: 2px solid var(--primary-color);
      color: var(--text-color);
    }

    .btn_secondary {
      background: transparent;
      border: 2px solid var(--accent-color);
      color: var(--text-color);
    }
  }
</style>
